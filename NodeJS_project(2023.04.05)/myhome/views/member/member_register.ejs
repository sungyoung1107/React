<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Insert title here</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
  </head>
  <body>
    <form id="myform" name="myform">
      <input type="hidden" id="idcheckyn" name="idcheckyn" value="N" />
      <%-include('../layout/header.ejs')%>
      <div class="container mt-3">
        <h1 style="margin-top: 50px">회원가입</h1>
        <div class="input-group mb-3">
          <input
            type="text"
            class="form-control"
            placeholder="아이디"
            name="userid"
            id="userid"
          />
          <div class="input-group-append">
            <button class="btn btn-success" type="button" id="btnIdCheck">
              중복체크
            </button>
          </div>
        </div>

        <div class="input-group mb-3">
          <input
            type="password"
            class="form-control"
            name="password"
            id="password"
            placeholder="패스워드"
          />
        </div>

        <div class="input-group mb-3">
          <input
            type="password"
            class="form-control"
            name="password2"
            id="password2"
            placeholder="패스워드확인"
          />
        </div>

        <div class="input-group mb-3">
          <input
            type="text"
            class="form-control"
            placeholder="이름"
            name="username"
            id="username"
          />
        </div>

        <div class="input-group mb-3">
          <input
            type="text"
            class="form-control"
            placeholder="닉네임"
            name="nickname"
            id="nickname"
          />
        </div>

        <div class="input-group mb-3">
          <input
            type="text"
            class="form-control"
            placeholder="email"
            name="email"
            id="email"
          />
        </div>

        <div class="input-group mb-3">
          <input
            type="text"
            class="form-control"
            placeholder="전화번호"
            name="phone"
            id="phone"
          />
        </div>

        <div class="input-group mb-3">
          <input
            type="text"
            class="form-control"
            id="zipcode"
            name="zipcode"
            placeholder="우편번호"
          />
          <input
            type="button"
            onclick="execDaumPostcode()"
            value="우편번호 찾기"
          /><br />
        </div>
        <div class="input-group mb-3">
          <input
            type="text"
            class="form-control"
            placeholder="도로명 또는 지번주소"
            name="address1"
            id="address1"
          />
          <!-- <input type="text" id="sample4_jibunAddress" placeholder="지번주소" /> -->
        </div>
        <span id="guide" style="color: #999; display: none"></span>
        <div class="input-group mb-3">
          <input
            type="text"
            class="form-control"
            placeholder="상세주소"
            name="address2"
            id="address2"
          />
        </div>
        <!-- <div class="input-group mb-4">
          <input type="text" id="sample4_extraAddress" placeholder="참고항목" />
        </div> -->
        <!-- 다음 우편 api :주소체계 번지 -> 길  -->

        <div class="container" style="text-align: right">
          <div class="btn-group">
            <button type="button" class="btn btn-primary" onclick="save()">
              등록</button
            >&nbsp;&nbsp;
            <button type="button" class="btn btn-primary" onclick="goCancel()">
              취소</button
            >&nbsp;&nbsp;
          </div>
        </div>
      </div>
    </form>
  </body>
</html>

<script>
  $(document).ready(() => {
    // 중복체크 버튼 클릭시
    $("#btnIdCheck").click(() => {
      let userid = $("#userid").val();

      $.ajax({
        url: "/member/idcheck",
        data: { userid: userid },
        method: "post",
        dataType: "json",
      })
        .then((result) => {
          if (result.result == "success") {
            console.log(result);
            alert("사용가능한 아이디입니다");
            $("#idcheckyn").val("Y"); // idcheck가 되었음을 저장한다.
            // 다시 아이디 입력 못하게 막자
            $("#userid").prop("readonly", "true");
            // readonly
            // disable:readonly - 서버로 정보를 보낸다.
            // disable - 값 안보낸다.
          } else {
            alert("이미 사용중인 아이디입니다");
          }
        })
        .catch((res, status, error) => {
          console.log(status);
        });
    });
  });

  // 저장시
  function save() {
    // data = {userid:$(userid).val(), username:$(username).val().....}
    // 폼 직렬화 : 객체를 파일이나 네트워크로 전송하는 기법
    let params = $("#myform").serialize(); // POST여야 하고, 파일 전송시 사용 못한다.
    console.log(params);

    $.ajax({
      url: "/member/save",
      data: params,
      method: "post",
      dataType: "json",
    })
      .then((result) => {
        if (result.result == "success") {
          alert("회원가입을 축하드립니다.");
          // 로그인페이지로 이동
          location.href = "/member/login"; // GET방식, a - anchor 태그
          // anchor 태그가 객체화 된 것이 location임
        }
      })
      .catch((res, status, error) => {
        console.log(status);
      });

    function goCancel() {
      location.href = "/member/login";
    }
  }

  //본 예제에서는 도로명 주소 표기 방식에 대한 법령에 따라, 내려오는 데이터를 조합하여 올바른 주소를 구성하는 방법을 설명합니다.
  function execDaumPostcode() {
    new daum.Postcode({
      oncomplete: function (data) {
        // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

        // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
        // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
        var roadAddr = data.roadAddress; // 도로명 주소 변수
        var extraRoadAddr = ""; // 참고 항목 변수

        // 법정동명이 있을 경우 추가한다. (법정리는 제외)
        // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
        if (data.bname !== "" && /[동|로|가]$/g.test(data.bname)) {
          extraRoadAddr += data.bname;
        }
        // 건물명이 있고, 공동주택일 경우 추가한다.
        if (data.buildingName !== "" && data.apartment === "Y") {
          extraRoadAddr +=
            extraRoadAddr !== "" ? ", " + data.buildingName : data.buildingName;
        }
        // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
        if (extraRoadAddr !== "") {
          extraRoadAddr = " (" + extraRoadAddr + ")";
        }

        // 우편번호와 주소 정보를 해당 필드에 넣는다.
        document.getElementById("zipcode").value = data.zonecode;
        document.getElementById("address1").value = roadAddr;
        document.getElementById("address1").value = data.jibunAddress; // 지번주소도 도로명주소에 넣는다.

        // 참고항목 문자열이 있을 경우 해당 필드에 넣는다.
        // if (roadAddr !== "") {
        //   document.getElementById("sample4_extraAddress").value = extraRoadAddr;
        // } else {
        //   document.getElementById("sample4_extraAddress").value = "";
        // }

        var guideTextBox = document.getElementById("guide");
        // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.
        if (data.autoRoadAddress) {
          var expRoadAddr = data.autoRoadAddress + extraRoadAddr;
          guideTextBox.innerHTML = "(예상 도로명 주소 : " + expRoadAddr + ")";
          guideTextBox.style.display = "block";
        } else if (data.autoJibunAddress) {
          var expJibunAddr = data.autoJibunAddress;
          guideTextBox.innerHTML = "(예상 지번 주소 : " + expJibunAddr + ")";
          guideTextBox.style.display = "block";
        } else {
          guideTextBox.innerHTML = "";
          guideTextBox.style.display = "none";
        }
      },
    }).open();
  }
</script>
